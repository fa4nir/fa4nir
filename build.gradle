buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

allprojects {
    apply plugin: 'java-library'

    group = 'io.github.fa4nir'
    version = '1.0.0'

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

}

subprojects {
    dependencies {
        implementation libs.javapoet
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    jar {
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }

}

project(':fa4nir-tests') {
    configurations.all {
        exclude group: "com.squareup", module: "javapoet:1.13.0"
    }
}

tasks.register('fatJar', Jar) {
    archiveFileName.set("${rootProject.name}-${rootProject.version}.jar")
    from {
        subprojects.stream()
                .filter { project -> project.name != 'examples' }
                .collect { it.sourceSets.main.output }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

dependencies {
    implementation project(':processor')
}

artifacts {
    archives fatJar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = 'io.github.fa4nir'
            artifactId = 'fa4nir'
            version = '1.0.0'

            artifact(sourceJar)
            artifact(javadocJar)
            artifact(fatJar)

            pom {
                name = 'fa4nir'
                description = 'Annotation processor to code generation to build easy way of coding and testing your applications'
                url = 'https://github.com/fa4nir/fa4nir'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = System.getenv('DEVELOPER_ID')
                        name = System.getenv('DEVELOPER_NAME')
                        email = System.getenv('DEVELOPER_EMAIL')
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/fa4nir/fa4nir.git'
                    developerConnection = 'scm:git:ssh://github.com/fa4nir/fa4nir.git'
                    url = 'https://github.com/fa4nir/fa4nir'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv('SONATYPE_USERNAME')
                password = System.getenv('SONATYPE_PASSWORD')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
